<!-- maps.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hospital Map</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">

    <style>
        /* CARD STYLING */
        .card-list {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 1rem;
            width: 100%;
            margin-bottom: 20px;
        }
        
        .card { 
            padding: 1.5rem 2rem; 
            border-radius: 2rem; 
            text-align: center; 
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
            display: flex; 
            flex-direction: column; 
            justify-content: space-between; 
            align-items: center; 
            overflow: hidden; 
            transition: transform 0.3s ease; 
            background: #017BFE; 

        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card a {
            text-decoration: none;
            color: inherit; /* Text color */
            width: 100%; 
            height: 100%; 
            display: flex; 
            flex-direction: column; 
            align-items: center;
        }

        .card .title p {
            color: #eaeaea; /* Text color inside the card */
        }

        #cardTitle {
            color: #017BFE; /* Title color */
            text-align: center; /* Center-align the text */
            margin-top: 100px; /* Margin for spacing */
        }

        
        /* BODY STYLING */
        body {
            background-color: #eaeaea;
            color: #2C2C2C;
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            padding-top: 80px; /* Space for the fixed header */
        }

        /* HEADER STYLING */
        .header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 20px;
            background-color: #017BFE;
            position: fixed;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%; /* Adjust the width to match the container */
            max-width: 1200px; /* Optional: Set a max-width for better control */
            border-radius: 12px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }
        
        .container {
            width: 90%; /* Match the header width */
            max-width: 1200px; /* Optional: Set the same max-width as header */
            margin: 0 auto; /* Center-align the container */
            padding: 20px 0; /* Adjust top and bottom padding as needed */
        }

        h1 {
            color: #eaeaea;
        }

        nav ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
            display: flex;
        }

        nav li {
            margin-right: 20px;
        }

        nav li:last-child {
            margin-right: 0;
        }

        nav a {
            position: relative;
            text-decoration: none;
            color: #eaeaea;
            display: inline-block;
            padding: 5px 0;
        }

        nav a::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            display: block;
            margin-top: 5px;
            right: 0;
            background: #eaeaea;
            transition: width 0.4s ease;
        }

        nav a:hover::after {
            width: 100%;
            left: 0;
            background: #eaeaea;
        }

        nav a:hover {
            color: #eaeaea;
        }

        #map {
            height: 80vh; /* Adjust height as necessary */
            width: 100%;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        footer {
            text-align: center;
            margin-top: 20px;
            font-size: 0.9rem;
            color: #777;
        }
        a {
            color: #007BFF; /* Link color */
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline; /* Underline on hover */
        }
    </style>
</head>
<body>
    <!-- HEADER -->
    <div class="header">
                <h1>Health Link <i class="fa-solid fa-link"></i> </h1>

        <nav>
            <ul>
                <li><a href="/landing">Home</a></li>
                <li><a href="/contact">Contact</a></li>
                <li><a href="/forum">Forum</a></li>
                <li><a href="/login">Log Out</a></li>
            </ul>
        </nav>
    </div>
    <div class="container">
        <h1 id = cardTitle>Hospital Locations</h1>
        <div id="map"></div>
    </div>


    <!-- CARDS CONTAINER -->
    <div class="container">
        <h1 id = cardTitle>Health Services</h1>
        <div class="card-list" id="card-list">
            <!-- Cards will be appended here -->
        </div>
    </div>

    <script>
        const sampleData = [
            {
                pageTitle: "Disease Cases and Symptoms Overview",
                iconClass: "fa-solid fa-virus",
                color: "#eaeaea", // Example color
                link: "/viruses"
            },
            {
                pageTitle: "Health Misinformation Awareness",
                iconClass: "fa-solid fa-book-medical",
                color: "#eaeaea",
                link: "/info"
            },
            {
                pageTitle: "AI Virus Diagnostic Assistant",
                iconClass: "fa-solid fa-robot",
                color: "#eaeaea", // Example color
                link: "/ai"
            },
            {
                pageTitle: "Hospital Locations",
                iconClass: "fa-solid fa-hospital",
                color: "#eaeaea", // Example color
                link: "/maps"
            }
        ];

        document.addEventListener("DOMContentLoaded", function() {
            const cardList = document.getElementById("card-list");

            if (!cardList) {
                console.error("Element not found");
                return;
            }

            sampleData.forEach(data => {
                const card = createCardElement(data);
                cardList.appendChild(card);
            });
        });

        function createCardElement(data) {
            const card = document.createElement("div");
            card.className = "card";
            card.innerHTML = `
                <a href="${data.link}">
                    <i class="${data.iconClass}" style="font-size: 40px; margin-bottom: 20px; color: ${data.color};"></i>
                    <div class="title">
                        <p>${data.pageTitle}</p>
                    </div>
                </a>
            `;
            return card;
        }
        // Get the hospital details from the URL
        const params = new URLSearchParams(window.location.search);
        const hospitalName = params.get('name');
        const hospitalLocation = params.get('location');

        // Function to initialize the Google Map
        function initMap() {
            // Get user's current location
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(position => {
                    const userLocation = { lat: position.coords.latitude, lng: position.coords.longitude };
                    const hospitalCoords = getHospitalCoordinates(hospitalLocation);

                    // Create the map centered at the user's location
                    const map = new google.maps.Map(document.getElementById('map'), {
                        zoom: 14,
                        center: userLocation,
                    });

                    // Add a marker for the user's location
                    new google.maps.Marker({
                        position: userLocation,
                        map: map,
                        title: 'You are here',
                        icon: {
                            url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png" // Optional blue marker icon
                        }
                    });

                    // Add a marker for the hospital
                    new google.maps.Marker({
                        position: hospitalCoords,
                        map: map,
                        title: hospitalName,
                        icon: {
                            url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png" // Optional red marker icon
                        }
                    });

                    // Optional: Draw a route between user and hospital
                    const directionsService = new google.maps.DirectionsService();
                    const directionsRenderer = new google.maps.DirectionsRenderer();
                    directionsRenderer.setMap(map);

                    directionsService.route({
                        origin: userLocation,
                        destination: hospitalCoords,
                        travelMode: google.maps.TravelMode.DRIVING,
                    }, (response, status) => {
                        if (status === 'OK') {
                            directionsRenderer.setDirections(response);
                        } else {
                            console.error('Directions request failed due to ' + status);
                        }
                    });
                }, () => {
                    alert("Unable to retrieve your location.");
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        // Function to get hospital coordinates based on the location string
        function getHospitalCoordinates(location) {
            // Replace this mock implementation with a real API call or a mapping solution
            const hospitalCoordinates = {
                "123 Main St, Springfield, IL": { lat: 39.7817, lng: -89.6501 },
                "456 Elm St, Springfield, IL": { lat: 39.7820, lng: -89.6533 },
                "789 Maple St, Springfield, IL": { lat: 39.7830, lng: -89.6510 },
                "101 Oak St, Springfield, IL": { lat: 39.7800, lng: -89.6505 },
            };
            return hospitalCoordinates[location] || { lat: 39.7831, lng: -89.6504 }; // Default location
        }
    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&callback=initMap"></script>
</body>
</html>
