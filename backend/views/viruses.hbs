<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Health Link</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">

    <style>
        /* CARD STYLING */
        .card-list {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 1rem;
            width: 100%;
            margin-bottom: 20px;
        }
        
        .card { 
            padding: 1.5rem 2rem; 
            border-radius: 2rem; 
            text-align: center; 
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
            display: flex; 
            flex-direction: column; 
            justify-content: space-between; 
            align-items: center; 
            overflow: hidden; 
            transition: transform 0.3s ease; 
            background: #017BFE; 

        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card a {
            text-decoration: none;
            color: inherit; /* Text color */
            width: 100%; 
            height: 100%; 
            display: flex; 
            flex-direction: column; 
            align-items: center;
        }

        .card .title p {
            color: #eaeaea; /* Text color inside the card */
        }

        #cardTitle {
            color: #017BFE; /* Title color */
            text-align: center; /* Center-align the text */
            margin-top: 100px; /* Margin for spacing */
        }

        
        /* BODY STYLING */
        body {
            background-color: #eaeaea;
            color: #2C2C2C;
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            padding-top: 80px; /* Space for the fixed header */
        }

        /* HEADER STYLING */
        .header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 20px;
            background-color: #017BFE;
            position: fixed;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            width: 90%; /* Adjust the width to match the container */
            max-width: 1200px; /* Optional: Set a max-width for better control */
            border-radius: 12px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }
        
        .container {
            width: 90%; /* Match the header width */
            max-width: 1200px; /* Optional: Set the same max-width as header */
            margin: 0 auto; /* Center-align the container */
            padding: 20px 0; /* Adjust top and bottom padding as needed */
        }

        h1 {
            color: #eaeaea;
        }

        nav ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
            display: flex;
        }

        nav li {
            margin-right: 20px;
        }

        nav li:last-child {
            margin-right: 0;
        }

        nav a {
            position: relative;
            text-decoration: none;
            color: #eaeaea;
            display: inline-block;
            padding: 5px 0;
        }

        nav a::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            display: block;
            margin-top: 5px;
            right: 0;
            background: #eaeaea;
            transition: width 0.4s ease;
        }

        nav a:hover::after {
            width: 100%;
            left: 0;
            background: #eaeaea;
        }

        nav a:hover {
            color: #eaeaea;
        }

        /* TABLE STYLING */
        .dropdown-container {
            margin-top: 100px;
            text-align: center;
            width: 100%;
        }

        input[type="text"], select {
            padding: 10px;
            font-size: 16px;
            width: 80%;
            max-width: 220px;
            margin: 10px 0;
            border: 1px solid #017BFE;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 123, 255, 0.2);
        }

        .table-container {
            display: flex;
            justify-content: center;
            width: 100%;
            margin: 20px auto;
        }

        table {
            width: 100%;
            max-width: 800px; /* Adjust as needed */
            border-collapse: collapse;
            background-color: #ffffff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }


        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: center;
        }

        th {
            background-color: #017BFE;
            color: white;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        @media (max-width: 600px) {
            body {
                padding-top: 60px;
            }

            .header {
                flex-direction: column;
            }

            h1 {
                font-size: 2em;
            }

            input[type="text"], select {
                width: 90%;
            }

            table {
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <!-- HEADER -->
    <div class="header">
                <h1>Health Link <i class="fa-solid fa-link"></i> </h1>

        <nav>
            <ul>
                <li><a href="/landing">Home</a></li>
                <li><a href="/contact">Contact</a></li>
                <li><a href="/forum">Forum</a></li>
                <li><a href="/login">Log Out</a></li>
            </ul>
        </nav>
    </div>

    <div class="dropdown-container">
        <br>
        <h1 id="cardTitle">Disease Cases and Symptoms Overview</h1>
        <label for="city-input">Select a City:</label>
        <input type="text" id="city-input" placeholder="Type a city name..." onkeyup="filterCities()">
        <select id="city-dropdown" onchange="updateTable()">
            <option value="">--Select a City--</option>
            <option value="New York">New York</option>
            <option value="Los Angeles">Los Angeles</option>
            <option value="London">London</option>
            <option value="Tokyo">Tokyo</option>
            <option value="Sydney">Sydney</option>
            <option value="Berlin">Berlin</option>
            <option value="Mumbai">Mumbai</option>
            <option value="Toronto">Toronto</option>
            <option value="Paris">Paris</option>
            <option value="Rio de Janeiro">Rio de Janeiro</option>
        </select>
    </div>


    <div class="table-container">

    <table id="disease-table">

        <thead>
            <tr>
                <th>Disease</th>
                <th>Number of Cases</th>
                <th>Symptoms</th>
            </tr>
        </thead>
        <tbody>
            <!-- Default data for New York -->
            <tr class="New York">
                <td>Flu</td>
                <td>1500</td>
                <td>Cough, Fever, Fatigue</td>
            </tr>
            <tr class="New York">
                <td>COVID-19</td>
                <td>3000</td>
                <td>Fever, Cough, Shortness of Breath</td>
            </tr>
            <tr class="New York">
                <td>Common Cold</td>
                <td>2000</td>
                <td>Sore Throat, Runny Nose, Cough</td>
            </tr>
        </tbody>
    </table>
    </div>

    <!-- CARDS CONTAINER -->
    <div class="container">
        <h1 id = cardTitle>Health Services</h1>
        <div class="card-list" id="card-list">
            <!-- Cards will be appended here -->
        </div>
    </div>



    <script>
        const sampleData = [
            {
                pageTitle: "Disease Cases and Symptoms Overview",
                iconClass: "fa-solid fa-virus",
                color: "#eaeaea", // Example color
                link: "/viruses"
            },
            {
                pageTitle: "Health Misinformation Awareness",
                iconClass: "fa-solid fa-book-medical",
                color: "#eaeaea",
                link: "/info"
            },
            {
                pageTitle: "AI Virus Diagnostic Assistant",
                iconClass: "fa-solid fa-robot",
                color: "#eaeaea", // Example color
                link: "/ai"
            },
            {
                pageTitle: "Hospital Locations",
                iconClass: "fa-solid fa-hospital",
                color: "#eaeaea", // Example color
                link: "/maps"
            }
        ];

        document.addEventListener("DOMContentLoaded", function() {
            const cardList = document.getElementById("card-list");

            if (!cardList) {
                console.error("Element not found");
                return;
            }

            sampleData.forEach(data => {
                const card = createCardElement(data);
                cardList.appendChild(card);
            });
        });

        function createCardElement(data) {
            const card = document.createElement("div");
            card.className = "card";
            card.innerHTML = `
                <a href="${data.link}">
                    <i class="${data.iconClass}" style="font-size: 40px; margin-bottom: 20px; color: ${data.color};"></i>
                    <div class="title">
                        <p>${data.pageTitle}</p>
                    </div>
                </a>
            `;
            return card;
        }
        const data = {
            "New York": [
                { disease: "Flu", cases: 1500, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 3000, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Common Cold", cases: 2000, symptoms: "Sore Throat, Runny Nose, Cough" }
            ],
            "Los Angeles": [
                { disease: "Flu", cases: 1200, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 2500, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Pneumonia", cases: 800, symptoms: "Chest Pain, Cough, Fever" }
            ],
            "London": [
                { disease: "Flu", cases: 1000, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 4000, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Asthma", cases: 900, symptoms: "Wheezing, Cough, Shortness of Breath" }
            ],
            "Tokyo": [
                { disease: "Flu", cases: 1100, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 3500, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Allergy", cases: 1300, symptoms: "Sneezing, Itchy Eyes, Runny Nose" }
            ],
            "Sydney": [
                { disease: "Flu", cases: 900, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 2000, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Skin Infection", cases: 600, symptoms: "Redness, Swelling, Pain" }
            ],
            "Berlin": [
                { disease: "Flu", cases: 1300, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 2700, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Chronic Bronchitis", cases: 700, symptoms: "Cough, Mucus Production, Wheezing" }
            ],
            "Mumbai": [
                { disease: "Flu", cases: 1600, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 3900, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Dengue", cases: 1200, symptoms: "High Fever, Severe Headaches, Joint Pain" }
            ],
            "Toronto": [
                { disease: "Flu", cases: 800, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 2200, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Seasonal Allergy", cases: 500, symptoms: "Sneezing, Itchy Eyes, Runny Nose" }
            ],
            "Paris": [
                { disease: "Flu", cases: 1400, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 3300, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Gastroenteritis", cases: 1100, symptoms: "Diarrhea, Vomiting, Abdominal Pain" }
            ],
            "Rio de Janeiro": [
                { disease: "Flu", cases: 900, symptoms: "Cough, Fever, Fatigue" },
                { disease: "COVID-19", cases: 3100, symptoms: "Fever, Cough, Shortness of Breath" },
                { disease: "Zika Virus", cases: 400, symptoms: "Fever, Rash, Joint Pain" }
            ]
        };

        function updateTable() {
            const city = document.getElementById('city-dropdown').value;
            const tbody = document.getElementById('disease-table').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';

            if (city && data[city]) {
                data[city].forEach(item => {
                    const row = tbody.insertRow();
                    row.insertCell(0).innerText = item.disease;
                    row.insertCell(1).innerText = item.cases;
                    row.insertCell(2).innerText = item.symptoms;
                });
            }
        }

        function filterCities() {
            const input = document.getElementById('city-input').value.toLowerCase();
            const dropdown = document.getElementById('city-dropdown');
            const options = dropdown.getElementsByTagName('option');

            let matchFound = false; // Flag to check if a match is found

            for (let i = 0; i < options.length; i++) {
                const option = options[i];
                const optionValue = option.value.toLowerCase();
                if (optionValue.indexOf(input) > -1) {
                    option.style.display = ''; // Show the option
                    matchFound = true; // A match has been found
                } else {
                    option.style.display = 'none'; // Hide the option
                }
            }

            // Automatically select the first visible option if there's a match
            if (matchFound) {
                for (let i = 0; i < options.length; i++) {
                    const option = options[i];
                    if (option.style.display === '') {
                        dropdown.value = option.value; // Set dropdown value to first matched option
                        updateTable(); // Update the table based on the selected city
                        break; // Stop once we find the first match
                    }
                }
            } else {
                dropdown.value = ""; // Reset dropdown if no matches
                // Clear the table if no matches and input is valid
                if (input.length > 0) {
                    const tbody = document.getElementById('disease-table').getElementsByTagName('tbody')[0];
                    tbody.innerHTML = ''; // Clear previous table data
                }
            }
        }
    </script>

</body>
</html>
